# ==================================================================================
# ==     TEMPLATE DE CONFIGURA√á√ÉO DE AMBIENTE (.env.example)                      ==                                 ==
# ==================================================================================
#
# üìã INSTRU√á√ïES DE USO:
# 1. Copie este arquivo para um novo arquivo chamado `.env`.
#    (Comando: `copy .env.example .env` no Windows ou `cp .env.example .env` no Linux/Mac)
# 2. Preencha as vari√°veis marcadas como [OBRIGAT√ìRIO] com seus pr√≥prios valores.
#
# üîí POL√çTICA DE SEGURAN√áA:
#    Este template √© projetado para um ambiente de desenvolvimento local robusto.
#    Em produ√ß√£o, recomenda-se a integra√ß√£o com um sistema de gest√£o de segredos
#    como HashiCorp Vault ou AWS Secrets Manager.
#
# ==================================================================================


# ----------------------------------------------------------------------------------
# üîê PILAR DE SEGURAN√áA: CHAVE MESTRA DO VAULT CUSTOMIZADO
# ----------------------------------------------------------------------------------
# SECURITY_VAULT_SECRET_KEY: A chave criptogr√°fica principal que protege todos os
# outros segredos dentro do nosso framework de seguran√ßa customizado.
#
# -> A√á√ÉO REQUERIDA [OBRIGAT√ìRIO]: Gere uma chave √∫nica e segura executando o comando
#    abaixo no terminal e cole o resultado aqui.
#    Comando: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
#
SECURITY_VAULT_SECRET_KEY=


# ----------------------------------------------------------------------------------
# ‚öôÔ∏è CONFIGURA√á√ÉO DOS SERVI√áOS DA PLATAFORMA
# ----------------------------------------------------------------------------------
# Credenciais usadas na inicializa√ß√£o dos servi√ßos. As aplica√ß√µes e DAGs, por sua
# vez, devem obter estas credenciais atrav√©s do Vault para acesso seguro em runtime.

# --- PostgreSQL (Data Warehouse & Airflow Metastore) ---
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=airflow_user
POSTGRES_DB=airflow_warehouse
# -> A√á√ÉO REQUERIDA [OBRIGAT√ìRIO]: Defina uma senha forte para o banco de dados.
POSTGRES_PASSWORD=

# --- MinIO (Data Lake S3-Compatible) ---
MINIO_HOST=minio
MINIO_API_PORT=9000
MINIO_CONSOLE_PORT=9001
MINIO_ROOT_USER=minio_admin
# -> A√á√ÉO REQUERIDA [OBRIGAT√ìRIO]: Defina uma senha root forte para o MinIO.
MINIO_ROOT_PASSWORD=

# --- Redis (Airflow Celery Broker) ---
REDIS_HOST=redis
REDIS_PORT=6379
# -> A√á√ÉO REQUERIDA [OPCIONAL]: Defina uma senha se o seu Redis a exigir.
REDIS_PASSWORD=


# ----------------------------------------------------------------------------------
# üå¨Ô∏è CONFIGURA√á√ïES ESPEC√çFICAS DO APACHE AIRFLOW
# ----------------------------------------------------------------------------------
# AIRFLOW_UID: User ID para executar os processos do Airflow. Essencial para evitar
# problemas de permiss√£o de arquivo, especialmente em ambientes Docker no Linux/Mac.
#
# -> A√á√ÉO REQUERIDA: Para Linux/Mac, use o comando `id -u`. Para Windows, 50000 √© um padr√£o seguro.
#
AIRFLOW_UID=50000

# Configura√ß√µes b√°sicas de execu√ß√£o para otimizar o uso de recursos locais.
AIRFLOW_EXECUTOR=CeleryExecutor
AIRFLOW_PARALLELISM=10
AIRFLOW_DAG_CONCURRENCY=8


# ----------------------------------------------------------------------------------
# üîó INTEGRA√á√ïES EXTERNAS - CHAVES DE API
# ----------------------------------------------------------------------------------
# Estas chaves ser√£o armazenadas de forma segura no Vault, mas s√£o definidas aqui
# para o script de setup inicial.

# -> A√á√ÉO REQUERIDA [OBRIGAT√ìRIO]: Insira sua chave da API do OpenWeather.
#    Obtenha em: https://openweathermap.org/api
OPENWEATHER_API_KEY=

# -> A√á√ÉO REQUERIDA [OPCIONAL]: Insira seu token para a API do Banco Central,
#    se necess√°rio para os endpoints que voc√™ est√° utilizando.
BCB_API_TOKEN=


# ==================================================================================
# FIM DA CONFIGURA√á√ÉO.
# ==================================================================================